PROJECT_DIR = "$(shell cd "$( dirname "${BASH_SOURCE[0]}" )/.." &> /dev/null && pwd )"
BACKEND_VERSION=0.1.0-SNAPSHOT
DOCKER_REPOSITORY=

default: live_test

venv:
	python3 -m venv venv

	. venv/bin/activate && \
	pip install --upgrade pip && \
	pip install --upgrade setuptools==57 && \
	pip install -r requirements.txt && \
	pip install -e . && \
	pip install pylint
	# pylint is needed for VSCode development
	# New setuptools breaks ngram
	# See https://stackoverflow.com/questions/69100275/error-while-downloading-the-requirements-using-pip-install-setup-command-use-2

.PHONY: live_test
live_test: venv update_version
	. venv/bin/activate && pip -V && which python && python scripts/live_test.py

.PHONY: clean
clean:
	rm -rf venv
	find . -type f -name '*.pyc' -delete

.PHONY: test
test: venv update_version
	. venv/bin/activate && pip install flake8 pytest
	# stop the build if there are Python syntax errors or undefined names
	. venv/bin/activate && cd vocabulary_srv && flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
	# exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
	. venv/bin/activate && cd vocabulary_srv && flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statis
	. venv/bin/activate && pytest tests

.PHONY: update_version
update_version:
	echo "# Generated by Makefile" > vocabulary_srv/buildinfo.py
	echo "VERSION = '${BACKEND_VERSION}'" >> vocabulary_srv/buildinfo.py
	echo "BUILD_DATE = '$(shell date +"%Y-%m-%dT%H:%M:%S%z")'" >> vocabulary_srv/buildinfo.py

.PHONY: build
build: update_version
	docker build -t vocabulary_srv -f Dockerfile .

.PHONY: run_db
run_db:
	docker network create -d bridge vocabulary || :
	docker run --rm --name postgres-test --network="vocabulary" -p 5432:5432 -e POSTGRES_PASSWORD=vocabulary_test -e POSTGRES_USER=vocabulary_test postgres

.PHONY: live_test_docker
live_test_docker:

	docker network create -d bridge vocabulary || :

	docker run --rm -it --network="vocabulary" --name vocabulary_srv_container \
	-v "$(PROJECT_DIR)/scripts/dockerconfig.py:/app/config.py" \
	-v "$(PROJECT_DIR)/tests/testdata/shared_collections:/app/shared_collections" \
	-v "$(PROJECT_DIR)/tests/testdata/shared_collections_metadata.yml:/app/shared_collections_metadata.yml" \
	vocabulary_srv flask init-db

	docker run --rm -d --network="vocabulary" --name vocabulary_srv_container \
	-v "$(PROJECT_DIR)/scripts/dockerconfig.py:/app/config.py" \
	-v "$(PROJECT_DIR)/tests/testdata/shared_collections:/app/shared_collections" \
	-v "$(PROJECT_DIR)/tests/testdata/shared_collections_metadata.yml:/app/shared_collections_metadata.yml" \
	-e 'PORT=5000' \
	-p 5100:5000 \
	vocabulary_srv

	docker logs -f vocabulary_srv_container

.PHONY: stop_live_test_docker
stop_live_test_docker:
	docker container stop vocabulary_srv_container || :

.PHONY: publish
publish:
	sudo docker tag vocabulary_srv ${DOCKER_REPOSITORY}/vocabulary_srv:${BACKEND_VERSION}
	sudo docker push ${DOCKER_REPOSITORY}/vocabulary_srv:${BACKEND_VERSION}
